version: 2.1

orbs:
  aws-ecr: circleci/aws-ecr@6.7.0

commands:
################### Helpers
  install_tests_dependencies:
    steps:
      - restore_cache:
          name: Check cache for test NPM dependencies
          keys:
            - v1-bichard7-next-tests-deps-{{ checksum "package-lock.json" }}
      - run:
          name: Install test NPM dependencies
          command: nvm use v16 && npm i
      - save_cache:
          key: v1-bichard7-next-tests-deps-{{ checksum "package-lock.json" }}
          paths:
            - ~/.cache/puppeteer
            - node_modules

  checkout_core:
    steps:
      - run:
          name: Clone bichard7-next-core
          command: git clone --depth 1 https://github.com/ministryofjustice/bichard7-next-core.git ~/bichard7-next-core
  
  install_core_dependencies:
    steps:
      - restore_cache:
          name: Check cache for core NPM dependencies
          keys:
            - v1-bichard7-next-core-deps-{{ checksum "~/bichard7-next-core/package-lock.json" }}
      - run:
          name: Install core NPM dependencies
          command: cd ~/bichard7-next-core && nvm use v16 && npm i
      - save_cache:
          key: v1-bichard7-next-core-deps-{{ checksum "~/bichard7-next-core/package-lock.json" }}
          paths: ~/bichard7-next-core/node_modules

  build_core_images:
    steps:
      - run:
          name: Build message forwarder image
          working_directory: ~/bichard7-next-core
          command: docker-compose -f environment/docker-compose.yml build message-forwarder

  checkout_audit_logging:
    steps:
      - run:
          name: Clone bichard7-next-audit-logging
          command: git clone -b rick/remove-strict-content-type-checking-in-express --depth 1 https://github.com/ministryofjustice/bichard7-next-audit-logging.git ~/bichard7-next-audit-logging
      - run:
          name: Retry - clone bichard7-next-audit-logging
          when: on_fail
          command: git clone -b rick/remove-strict-content-type-checking-in-express --depth 1 https://github.com/ministryofjustice/bichard7-next-audit-logging.git ~/bichard7-next-audit-logging
  
  build_audit_logging_images:
    steps:
      - run:
          name: Build audit logging images
          working_directory: ~/bichard7-next-audit-logging
          command: make build-api-server build-event-handler-server

  save_artifacts:
    steps:
      - run:
          name: Compress the artifacts for easier downloading
          when: always
          command: for file in ./screenshots/*; do tar -czf ${file}.tar.gz $file; done
      - run:
          name: Create the saved_artifacts directory
          when: always
          command: mkdir ./saved_artifacts;
      - run:
          name: Move the gzipped files across
          when: always
          command: mv ./screenshots/*.tar.gz ./saved_artifacts/
      - store_artifacts:
          path: /home/circleci/project/saved_artifacts
      - store_test_results:
          path: /home/circleci/project/test-results.xml

################### Services
  start_bichard7_legacy:
    parameters:
      ENABLE_PHASE_2:
        default: "true"
        type: string
    steps:
      - run: bash scripts/fetch_docker_image.sh nodejs # required for message-forwarder in core
      - build_core_images
      - checkout_audit_logging
      - build_audit_logging_images
      - run:
          name: Run docker services
          working_directory: ~/bichard7-next-core
          command: |
            ENABLE_PHASE_2=<<parameters.ENABLE_PHASE_2>> \
            npm run all-legacy
      - run:
          name: Retry - run all
          working_directory: ~/bichard7-next-core
          when: on_fail
          command: |
            # TODO: add legacy compose to destroy in core
            docker-compose --project-name bichard \
              -f environment/docker-compose.yml \
              -f environment/docker-compose-bichard.yml down -v

            ENABLE_PHASE_2=<<parameters.ENABLE_PHASE_2>> \
            npm run all-legacy

  start_core:
    steps:
      - run:
          name: Start the test server in the background
          working_directory: ~/bichard7-next-core
          command: nvm use v16 && npm run test:server
          background: true
      - run:
          name: Wait for Core
          command: nvm use v16 && npx -y wait-port 6000

#################################################################################

jobs:
  build:
    machine:
      image: ubuntu-2004:2022.07.1
    resource_class: xlarge
    steps:
      - checkout
      - install_tests_dependencies
      - checkout_core
      - install_core_dependencies
      - persist_to_workspace:
          root: ~/
          paths: .

  test-e2e:
    machine:
      image: ubuntu-2004:2022.07.1
      docker_layer_caching: true
    resource_class: large
    environment:
      RECORD: "true"
      AWS_URL: http://localhost:4566
      AUDIT_LOG_API_URL: http://audit-log-api:7010
    steps:
      - attach_workspace:
          at: ~/
      - start_bichard7_legacy
      - run: |
          TOTAL_CHUNKS=$CIRCLE_NODE_TOTAL CHUNK_NUMBER=$CIRCLE_NODE_INDEX \
          npm run test:chunk
      - save_artifacts
    parallelism: 10

  tests-e2e-new-ui:
    machine:
      image: ubuntu-2004:2022.07.1
      docker_layer_caching: true
    resource_class: large
    environment:
      RECORD: "true"
      AWS_URL: http://localhost:4566
      AUDIT_LOG_API_URL: http://audit-log-api:7010
    steps:
      - attach_workspace:
          at: ~/
      - start_bichard7_legacy
      - run: |
          TOTAL_CHUNKS=$CIRCLE_NODE_TOTAL CHUNK_NUMBER=$CIRCLE_NODE_INDEX \
          npm run test:chunk:nextUI
      - save_artifacts
    parallelism: 10

  test-characterisation-bichard:
    machine:
        image: ubuntu-2004:2022.07.1
        docker_layer_caching: true
    resource_class: large
    steps:
      - attach_workspace:
          at: ~/
      - start_bichard7_legacy:
          ENABLE_PHASE_2: "false"
      - run: nvm use v16 && npm run test:characterisation:bichard

  test-characterisation-core:
    machine:
        image: ubuntu-2004:2022.07.1
        docker_layer_caching: true
    resource_class: large
    steps:
      - attach_workspace:
          at: ~/
      - start_core
      - run: nvm use v16 && npm run test:characterisation

#################################################################################

workflows:
  version: 3

  deploy:
    jobs:
      - build
      - test-e2e:
          requires:
            - build
      - tests-e2e-new-ui:
          requires:
            - build
      - test-characterisation-bichard:
          requires:
            - build
      - test-characterisation-core:
          requires:
            - build
