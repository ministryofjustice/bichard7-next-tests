# will circle ci pick this up now?
version: 2.1

orbs:
  aws-ecr: circleci/aws-ecr@6.7.0

jobs:
  build-ci:
    machine:
      image: ubuntu-2004:202104-01
    steps:
      - add_ssh_keys:
          fingerprints:
            - 3d:e6:7f:cd:d1:2b:35:a5:71:da:87:12:c2:0b:0b:44
            - ef:ec:5d:99:f7:ec:d8:35:ff:f6:2b:8b:23:a1:fa:f4
      - run:
          command: ssh-add -D
      - run:
          command: ssh-add ~/.ssh/id_rsa_3de67fcdd12b35a571da8712c20b0b44
      - run:
          name: Clone Bichard7 Next
          command: git clone --depth 1 git@github.com:ministryofjustice/bichard7-next.git ~/bichard7-next

      - run:
          name: Build Bichard7 Next
          command: |
            cd ~/bichard7-next
            make build-ci
      - persist_to_workspace:
          root: ~/
          paths: bichard7-next

  test-next:
    machine:
      image: ubuntu-2004:202104-01
      docker_layer_caching: true
    resource_class: large
    environment:
      STACK_TYPE: next
      BICHARD_REDIRECT_URL: https://172.17.0.1:9443/bichard-ui/Authenticate
      WORKSPACE: local-next
      RECORD: "true"
    steps:
      - checkout
      - attach_workspace:
          at: ~/
      - run:
          name: Clear out the networks before we start our Docker services
          command: docker network prune -f
      - run:
          name: Fetch the user-service image
          command: |
            cd ~/bichard7-next
            bash scripts/fetch_user_service_docker.sh
      - run:
          name: Run docker services (except BeanConnect)
          command: |
            cd ~/bichard7-next
            make run-all-no-bc -j 4
      - run:
          name: Fetch the PNC Emulator image
          command: |
            cd ~/bichard7-next
            bash scripts/fetch_pncemulator_docker.sh
      - run:
          name: Fetch the BeanConnect image
          command: |
            cd ~/bichard7-next
            bash scripts/fetch_beanconnect_docker.sh
      - run:
          name: Run BeanConnect and PNC Emulator docker services
          command: |
            cd ~/bichard7-next
            make run-beanconnect
      - run:
          name: Wait for Bichard
          command: |
            cd ~/bichard7-next
            bash ./scripts/wait_for_bichard.sh

      - run:
          name: Build E2E tests
          command: make build
      - run:
          name: Warm-up login test
          environment:
            - TEST_TIMEOUT: 180000
          command: |
            cd ~/bichard7-next
            make e2e-warmup
      - run:
          name: Remove warmup test container
          command: docker rm $(docker ps -a -q --filter "name=e2e-tests" --filter "status=exited")
      - run:
          name: Run E2E tests
          command: |
            cd ~/bichard7-next
            make e2e-tests
      - run:
          name: Copy the screenshots from the image
          when: always
          command: docker cp $(docker ps -a -q --filter "name=e2e-tests" --filter "status=exited"):/src/screenshots ./screenshots
      - run:
          name: Compress the screenshots for easier downloading
          when: always
          command: for file in ./screenshots/*; do tar -czvvf ${file}.tar.gz $file; done
      - run:
          name: Create the artifacts directory
          when: always
          command: mkdir ./artifacts; for file in ./screenshots/*; do tar -czvvf ${file}.tar.gz $file; done
      - run:
          name: Move the gzipped files across
          when: always
          command: mv ./screenshots/*.tar.gz ./artifacts/

      - store_artifacts:
          path: /home/circleci/project/artifacts

  test-baseline:
    machine:
      image: ubuntu-2004:202104-01
      docker_layer_caching: true
    environment:
      STACK_TYPE: baseline
      MESSAGE_ENTRY_POINT: mq
      BICHARD_REDIRECT_URL: https://172.17.0.1:9443/bichard-ui/Authenticate
      WORKSPACE: local-baseline
      RECORD: "true"
    steps:
      - attach_workspace:
          at: ~/
      - run:
          command: docker network prune -f
          name: Clear out the networks before we start our Docker services
      - run:
          name: Fetch the user-service image
          command: |
            cd ~/bichard7-next
            bash scripts/fetch_user_service_docker.sh
      - run:
          name: Run docker services (except BeanConnect)
          command: |
            cd ~/bichard7-next
            make run-all-baseline-no-bc -j 4
      - run:
          name: Fetch the PNC Emulator image
          command: |
            cd ~/bichard7-next
            bash scripts/fetch_pncemulator_docker.sh
      - run:
          name: Fetch the BeanConnect image
          command: |
            cd ~/bichard7-next
            bash scripts/fetch_beanconnect_docker.sh
      - run:
          name: Run BeanConnect and PNC Emulator docker services
          command: |
            cd ~/bichard7-next
            make run-beanconnect
      - run:
          name: Wait for Bichard
          command: |
            cd ~/bichard7-next
            bash ./scripts/wait_for_bichard.sh
      - run:
          name: Wait for DB2
          command: |
            cd ~/bichard7-next
            ./scripts/db/wait_for_db.sh
      - checkout
      - run:
          name: Build E2E tests
          command: make build
      - run:
          name: Warm-up login test
          environment:
            - TEST_TIMEOUT: 180000
          command: |
            cd ~/bichard7-next
            make e2e-warmup
      - run:
          name: Remove warmup test container
          command: docker rm $(docker ps -a -q --filter "name=e2e-tests" --filter "status=exited")
      - run:
          name: Run E2E tests
          command: |
            cd ~/bichard7-next
            make e2e-tests
      - run:
          name: Copy the screenshots from the image
          when: always
          command: docker cp $(docker ps -a -q --filter "name=e2e-tests" --filter "status=exited"):/src/screenshots ./screenshots
      - run:
          name: Compress the screenshots for easier downloading
          when: always
          command: for file in ./screenshots/*; do tar -czvvf ${file}.tar.gz $file; done
      - run:
          name: Create the artifacts directory
          when: always
          command: mkdir ./artifacts; for file in ./screenshots/*; do tar -czvvf ${file}.tar.gz $file; done
      - run:
          name: Move the gzipped files across
          when: always
          command: mv ./screenshots/*.tar.gz ./artifacts/

      - store_artifacts:
          path: /home/circleci/project/artifacts
workflows:
  version: 2

  deploy:
    jobs:
      - build-ci
      - test-next:
          requires:
            - build-ci
      - test-baseline:
          requires:
            - build-ci
