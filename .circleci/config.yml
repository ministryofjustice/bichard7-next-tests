version: 2.1

orbs:
  aws-ecr: circleci/aws-ecr@6.7.0
  node: circleci/node@5.1.0

commands:
  ################### Helpers
  checkout_core:
    steps:
      - run:
          name: Clone bichard7-next-core
          command: git clone --depth 1 https://github.com/ministryofjustice/bichard7-next-core.git ~/bichard7-next-core
      - run:
          name: Install dependency
          working_directory: ~/bichard7-next-core
          command: npm i
      - run:
          name: Build core
          working_directory: ~/bichard7-next-core
          command: npm run build

  build_core_images:
    steps:
      - run:
          name: Build message forwarder image
          working_directory: ~/bichard7-next-core
          command: docker-compose -f environment/docker-compose.yml build message-forwarder

  build_audit_logging_images:
    steps:
      - run:
          name: Clone bichard7-next-audit-logging
          command: git clone --depth 1 https://github.com/ministryofjustice/bichard7-next-audit-logging.git ~/bichard7-next-audit-logging
      - run:
          name: Build audit logging images
          working_directory: ~/bichard7-next-audit-logging
          command: make build-api-server build-event-handler-server

  run_test_chunk:
    parameters:
      NEXTUI:
        default: "false"
        type: "string"
    steps:
      - run:
          name: Run test chunk
          command: |
            CHUNK=$(circleci tests glob "features/**/*.feature" | circleci tests split --split-by=timings) \
            NEXTUI=<<parameters.NEXTUI>> \
            npm run test:chunk

  save_artifacts:
    steps:
      - run:
          name: Compress the artifacts for easier downloading
          when: always
          command: for file in ./screenshots/*; do tar -czf ${file}.tar.gz $file; done
      - run:
          name: Create the saved_artifacts directory
          when: always
          command: mkdir ./saved_artifacts;
      - run:
          name: Move the gzipped files across
          when: always
          command: mv ./screenshots/*.tar.gz ./saved_artifacts/
      - store_artifacts:
          path: /home/circleci/project/saved_artifacts
      - store_test_results:
          path: /home/circleci/project/test-results.xml

  ################### Services
  start_bichard7_legacy:
    parameters:
      ENABLE_PHASE_2:
        default: "true"
        type: string
    steps:
      - run: bash scripts/fetch_docker_image.sh nodejs-20-2023 # required for message-forwarder in core
      - build_core_images
      - build_audit_logging_images
      - run:
          name: Start bichard7 legacy
          working_directory: ~/bichard7-next-core
          command: |
            ENABLE_PHASE_2=<<parameters.ENABLE_PHASE_2>> \
            npm run all-legacy
      - run:
          name: Retry - start bichard7 legacy
          working_directory: ~/bichard7-next-core
          when: on_fail
          command: |
            # TODO: add legacy compose to destroy in core
            docker-compose --project-name bichard \
              -f environment/docker-compose.yml \
              -f environment/docker-compose-bichard.yml down -v

            ENABLE_PHASE_2=<<parameters.ENABLE_PHASE_2>> \
            npm run all-legacy

  start_bichard7_core:
    steps:
      - run:
          command: nvm install
          working_directory: ~/bichard7-next-core
      - run: bash scripts/fetch_docker_image.sh nodejs-20-2023 # required for message-forwarder in core
      - build_core_images
      - build_audit_logging_images
      - run:
          command: npm run all-no-worker
          working_directory: ~/bichard7-next-core
      - run:
          # currently quicker to run the worker separately due to data install
          name: Run the worker
          command: npm run -w packages/conductor worker
          working_directory: ~/bichard7-next-core
          background: true
      - run:
          when: on_fail
          working_directory: ~/bichard7-next-core
          command: npm run all-no-worker && npm run -w packages/conductor worker

  start_core_testserver:
    steps:
      - run:
          name: Start the test server in the background
          working_directory: ~/bichard7-next-core
          command: npm run -w packages/core test:server
          background: true
      - run:
          name: Wait for Core
          command: npx -y wait-port 6000

#################################################################################

jobs:
  build:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: xlarge
    steps:
      - checkout
      - node/install
      - node/install-packages
      - checkout_core
      - node/install-packages:
          app-dir: ~/bichard7-next-core
      - persist_to_workspace:
          root: ~/
          paths: .

  test-e2e-legacy:
    machine:
      image: ubuntu-2204:2023.07.2
      docker_layer_caching: false
    resource_class: large
    parallelism: 10
    environment:
      RECORD: "true"
      MESSAGE_ENTRY_POINT: mq
      AWS_URL: "http://localhost:4566"
    steps:
      - node/install
      - attach_workspace:
          at: ~/
      - start_bichard7_legacy
      - run_test_chunk
      - save_artifacts
      - store_test_results:
          path: ./cucumber/results

  test-e2e-legacy-new-ui:
    machine:
      image: ubuntu-2204:2023.07.2
      docker_layer_caching: false
    resource_class: large
    parallelism: 10
    environment:
      RECORD: "true"
      MESSAGE_ENTRY_POINT: mq
      AWS_URL: "http://localhost:4566"
    steps:
      - node/install
      - attach_workspace:
          at: ~/
      - start_bichard7_legacy
      - run_test_chunk:
          NEXTUI: "true"
      - save_artifacts
      - store_test_results:
          path: ./cucumber/results
  
  test-e2e-core:
    machine:
      image: ubuntu-2204:2023.07.2
      docker_layer_caching: false
    resource_class: large
    parallelism: 10
    environment:
      RECORD: "true"
      MESSAGE_ENTRY_POINT: s3
      AWS_URL: "http://localhost:4566"
      # use conductor for phase1 manual resolution
      LEGACY_PHASE1: "false"
    steps:
      - attach_workspace:
          at: ~/
      - start_bichard7_core
      - run_test_chunk
      - save_artifacts
      - store_test_results:
          path: ./cucumber/results

  test-e2e-core-new-ui:
    machine:
      image: ubuntu-2204:2023.07.2
      docker_layer_caching: false
    resource_class: large
    parallelism: 10
    environment:
      RECORD: "true"
      MESSAGE_ENTRY_POINT: s3
      AWS_URL: "http://localhost:4566"
      # use conductor for phase1 manual resolution
      LEGACY_PHASE1: "false"
    steps:
      - attach_workspace:
          at: ~/
      - start_bichard7_core
      - run_test_chunk:
          NEXTUI: "true"
      - save_artifacts
      - store_test_results:
          path: ./cucumber/results

  test-characterisation-legacy:
    machine:
      image: ubuntu-2204:2023.07.2
      docker_layer_caching: false
    resource_class: large
    steps:
      - node/install
      - attach_workspace:
          at: ~/
      - start_bichard7_legacy:
          ENABLE_PHASE_2: "false"
      - run: npm run test:characterisation:bichard

  test-characterisation-core:
    machine:
      image: ubuntu-2204:2023.07.2
      docker_layer_caching: false
    resource_class: large
    steps:
      - node/install
      - attach_workspace:
          at: ~/
      - start_core_testserver
      - run: npm run test:characterisation

#################################################################################

workflows:
  version: 3

  deploy:
    jobs:
      - build
      - test-e2e-legacy:
          requires:
            - build
      - test-e2e-legacy-new-ui:
          requires:
            - build
      - test-e2e-core:
          requires:
            - build
      - test-e2e-core-new-ui:
          requires:
            - build
      - test-characterisation-legacy:
          requires:
            - build
      - test-characterisation-core:
          requires:
            - build
